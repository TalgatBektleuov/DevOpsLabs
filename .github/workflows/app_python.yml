name: app_python
on:
  push:
    paths:
      - app_python/**,
      - .github/workflows/app_python.yml
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Build & Push
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Build and Push
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: user/app:latest

  linter:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Python Linter
        uses: sunnysid3up/python-linter@master
        with:
          source: "src"
          mypy-options: "--ignore-missing-imports --show-error-codes"
          pylint-options: "--rcfile=pytest.ini"
          isort-options: "-w 100"
          django: true
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Run in all these versions of Python
        python-version: [ 3.5, 3.6, 3.7, 3.8, 3.9 ]

    steps:
      # Checkout the latest code from the repo
      - name: Checkout repo
        uses: actions/checkout@v2
        # Setup which version of Python to use
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
        # Display the Python version being used
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
        # Install the package using the setup.py
      - name: Install package
        run: python setup.py install
        # Install pytest (you can use some other testing utility)
      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
        # Run the tests. I'm using pytest and the file is in the tests directory.
      - name: Run tests
        run: pytest app_python/tests/app_test.py

  security:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: Snyk Check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
